// Generated by view binder compiler. Do not edit!
package com.forbes.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.forbes.app.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMagazineBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView magazineCover;

  @NonNull
  public final TextView magazineDate;

  @NonNull
  public final TextView magazineDescription;

  @NonNull
  public final TextView magazineTitle;

  private ItemMagazineBinding(@NonNull MaterialCardView rootView, @NonNull ImageView magazineCover,
      @NonNull TextView magazineDate, @NonNull TextView magazineDescription,
      @NonNull TextView magazineTitle) {
    this.rootView = rootView;
    this.magazineCover = magazineCover;
    this.magazineDate = magazineDate;
    this.magazineDescription = magazineDescription;
    this.magazineTitle = magazineTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMagazineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMagazineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_magazine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMagazineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.magazineCover;
      ImageView magazineCover = ViewBindings.findChildViewById(rootView, id);
      if (magazineCover == null) {
        break missingId;
      }

      id = R.id.magazineDate;
      TextView magazineDate = ViewBindings.findChildViewById(rootView, id);
      if (magazineDate == null) {
        break missingId;
      }

      id = R.id.magazineDescription;
      TextView magazineDescription = ViewBindings.findChildViewById(rootView, id);
      if (magazineDescription == null) {
        break missingId;
      }

      id = R.id.magazineTitle;
      TextView magazineTitle = ViewBindings.findChildViewById(rootView, id);
      if (magazineTitle == null) {
        break missingId;
      }

      return new ItemMagazineBinding((MaterialCardView) rootView, magazineCover, magazineDate,
          magazineDescription, magazineTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
