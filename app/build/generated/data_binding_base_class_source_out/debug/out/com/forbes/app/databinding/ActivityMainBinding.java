// Generated by view binder compiler. Do not edit!
package com.forbes.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.forbes.app.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView bookmarkedStoriesRecycler;

  @NonNull
  public final TextView bookmarkedStoriesTitle;

  @NonNull
  public final LinearLayout bookmarksContainer;

  @NonNull
  public final RecyclerView breakingNewsRecycler;

  @NonNull
  public final TextView breakingNewsTitle;

  @NonNull
  public final LinearLayout latestStoriesContainer;

  @NonNull
  public final RecyclerView latestStoriesRecycler;

  @NonNull
  public final TextView latestStoriesTitle;

  @NonNull
  public final LinearLayout magazineContainer;

  @NonNull
  public final TextView noBookmarksText;

  @NonNull
  public final TextView notificationText;

  @NonNull
  public final TabLayout tabLayout;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView bookmarkedStoriesRecycler, @NonNull TextView bookmarkedStoriesTitle,
      @NonNull LinearLayout bookmarksContainer, @NonNull RecyclerView breakingNewsRecycler,
      @NonNull TextView breakingNewsTitle, @NonNull LinearLayout latestStoriesContainer,
      @NonNull RecyclerView latestStoriesRecycler, @NonNull TextView latestStoriesTitle,
      @NonNull LinearLayout magazineContainer, @NonNull TextView noBookmarksText,
      @NonNull TextView notificationText, @NonNull TabLayout tabLayout) {
    this.rootView = rootView;
    this.bookmarkedStoriesRecycler = bookmarkedStoriesRecycler;
    this.bookmarkedStoriesTitle = bookmarkedStoriesTitle;
    this.bookmarksContainer = bookmarksContainer;
    this.breakingNewsRecycler = breakingNewsRecycler;
    this.breakingNewsTitle = breakingNewsTitle;
    this.latestStoriesContainer = latestStoriesContainer;
    this.latestStoriesRecycler = latestStoriesRecycler;
    this.latestStoriesTitle = latestStoriesTitle;
    this.magazineContainer = magazineContainer;
    this.noBookmarksText = noBookmarksText;
    this.notificationText = notificationText;
    this.tabLayout = tabLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookmarked_stories_recycler;
      RecyclerView bookmarkedStoriesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkedStoriesRecycler == null) {
        break missingId;
      }

      id = R.id.bookmarked_stories_title;
      TextView bookmarkedStoriesTitle = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkedStoriesTitle == null) {
        break missingId;
      }

      id = R.id.bookmarks_container;
      LinearLayout bookmarksContainer = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksContainer == null) {
        break missingId;
      }

      id = R.id.breaking_news_recycler;
      RecyclerView breakingNewsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (breakingNewsRecycler == null) {
        break missingId;
      }

      id = R.id.breaking_news_title;
      TextView breakingNewsTitle = ViewBindings.findChildViewById(rootView, id);
      if (breakingNewsTitle == null) {
        break missingId;
      }

      id = R.id.latest_stories_container;
      LinearLayout latestStoriesContainer = ViewBindings.findChildViewById(rootView, id);
      if (latestStoriesContainer == null) {
        break missingId;
      }

      id = R.id.latest_stories_recycler;
      RecyclerView latestStoriesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (latestStoriesRecycler == null) {
        break missingId;
      }

      id = R.id.latest_stories_title;
      TextView latestStoriesTitle = ViewBindings.findChildViewById(rootView, id);
      if (latestStoriesTitle == null) {
        break missingId;
      }

      id = R.id.magazine_container;
      LinearLayout magazineContainer = ViewBindings.findChildViewById(rootView, id);
      if (magazineContainer == null) {
        break missingId;
      }

      id = R.id.no_bookmarks_text;
      TextView noBookmarksText = ViewBindings.findChildViewById(rootView, id);
      if (noBookmarksText == null) {
        break missingId;
      }

      id = R.id.notification_text;
      TextView notificationText = ViewBindings.findChildViewById(rootView, id);
      if (notificationText == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, bookmarkedStoriesRecycler,
          bookmarkedStoriesTitle, bookmarksContainer, breakingNewsRecycler, breakingNewsTitle,
          latestStoriesContainer, latestStoriesRecycler, latestStoriesTitle, magazineContainer,
          noBookmarksText, notificationText, tabLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
