// Generated by view binder compiler. Do not edit!
package com.forbes.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.forbes.app.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final RecyclerView breakingNewsRecycler;

  @NonNull
  public final TextView breakingNewsTitle;

  @NonNull
  public final ImageView forbesLogo;

  @NonNull
  public final RecyclerView latestStoriesRecycler;

  @NonNull
  public final TextView latestStoriesTitle;

  @NonNull
  public final TextView notificationText;

  @NonNull
  public final ImageButton searchButton;

  @NonNull
  public final ImageButton settingsButton;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull RecyclerView breakingNewsRecycler, @NonNull TextView breakingNewsTitle,
      @NonNull ImageView forbesLogo, @NonNull RecyclerView latestStoriesRecycler,
      @NonNull TextView latestStoriesTitle, @NonNull TextView notificationText,
      @NonNull ImageButton searchButton, @NonNull ImageButton settingsButton,
      @NonNull TabLayout tabLayout, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.breakingNewsRecycler = breakingNewsRecycler;
    this.breakingNewsTitle = breakingNewsTitle;
    this.forbesLogo = forbesLogo;
    this.latestStoriesRecycler = latestStoriesRecycler;
    this.latestStoriesTitle = latestStoriesTitle;
    this.notificationText = notificationText;
    this.searchButton = searchButton;
    this.settingsButton = settingsButton;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.breaking_news_recycler;
      RecyclerView breakingNewsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (breakingNewsRecycler == null) {
        break missingId;
      }

      id = R.id.breaking_news_title;
      TextView breakingNewsTitle = ViewBindings.findChildViewById(rootView, id);
      if (breakingNewsTitle == null) {
        break missingId;
      }

      id = R.id.forbes_logo;
      ImageView forbesLogo = ViewBindings.findChildViewById(rootView, id);
      if (forbesLogo == null) {
        break missingId;
      }

      id = R.id.latest_stories_recycler;
      RecyclerView latestStoriesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (latestStoriesRecycler == null) {
        break missingId;
      }

      id = R.id.latest_stories_title;
      TextView latestStoriesTitle = ViewBindings.findChildViewById(rootView, id);
      if (latestStoriesTitle == null) {
        break missingId;
      }

      id = R.id.notification_text;
      TextView notificationText = ViewBindings.findChildViewById(rootView, id);
      if (notificationText == null) {
        break missingId;
      }

      id = R.id.search_button;
      ImageButton searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.settings_button;
      ImageButton settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, breakingNewsRecycler,
          breakingNewsTitle, forbesLogo, latestStoriesRecycler, latestStoriesTitle,
          notificationText, searchButton, settingsButton, tabLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
